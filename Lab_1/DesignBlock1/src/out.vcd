$date
	Mon Oct 07 11:01:54 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module db1 $end
$var wire 2 ! KEY [1:0] $end
$var wire 8 " SW [7:0] $end
$var wire 4 # w5 [3:0] $end
$var wire 4 $ w4 [3:0] $end
$var wire 4 % w3 [3:0] $end
$var wire 4 & w2 [3:0] $end
$var wire 4 ' w1 [3:0] $end
$var wire 4 ( w0 [3:0] $end
$var wire 10 ) LEDR [9:0] $end
$var wire 8 * HEX5 [7:0] $end
$var wire 8 + HEX4 [7:0] $end
$var wire 8 , HEX3 [7:0] $end
$var wire 8 - HEX2 [7:0] $end
$var wire 8 . HEX1 [7:0] $end
$var wire 8 / HEX0 [7:0] $end
$scope module h0 $end
$var wire 4 0 num [3:0] $end
$var reg 8 1 out [7:0] $end
$upscope $end
$scope module h1 $end
$var wire 4 2 num [3:0] $end
$var reg 8 3 out [7:0] $end
$upscope $end
$scope module h2 $end
$var wire 4 4 num [3:0] $end
$var reg 8 5 out [7:0] $end
$upscope $end
$scope module h3 $end
$var wire 4 6 num [3:0] $end
$var reg 8 7 out [7:0] $end
$upscope $end
$scope module h4 $end
$var wire 4 8 num [3:0] $end
$var reg 8 9 out [7:0] $end
$upscope $end
$scope module h5 $end
$var wire 4 : num [3:0] $end
$var reg 8 ; out [7:0] $end
$upscope $end
$upscope $end
$scope module tb $end
$var reg 1 < KEY0 $end
$var reg 1 = KEY1 $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1=
1<
b11111001 ;
b1 :
b11000000 9
b0x 8
b11000000 7
b0x 6
b11000000 5
b0x11 4
b10011000 3
b1001 2
b11000000 1
b100x 0
b11000000 /
b10011000 .
b11000000 -
b11000000 ,
b11000000 +
b11111001 *
b0zzzzzzzz )
b100x (
b1001 '
b0x11 &
b0x %
b0x $
b1 #
bz "
bz !
$end
#100
0<
#300
0=
#400
