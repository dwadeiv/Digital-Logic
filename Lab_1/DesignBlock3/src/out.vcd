$date
	Mon Oct 07 11:41:52 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb $end
$var wire 10 ! LEDR [9:0] $end
$var wire 8 " HEX5 [7:0] $end
$var wire 8 # HEX4 [7:0] $end
$var wire 8 $ HEX1 [7:0] $end
$var wire 8 % HEX0 [7:0] $end
$var reg 10 & SW [9:0] $end
$scope module DUT $end
$var wire 10 ' SW [9:0] $end
$var wire 5 ( sIn2 [4:0] $end
$var wire 5 ) sIn1 [4:0] $end
$var wire 1 * isTwos $end
$var wire 4 + input2 [3:0] $end
$var wire 4 , input1 [3:0] $end
$var wire 5 - in2Sign [4:0] $end
$var wire 5 . in1Sign [4:0] $end
$var wire 10 / LEDR [9:0] $end
$var wire 8 0 HEX5 [7:0] $end
$var wire 8 1 HEX4 [7:0] $end
$var wire 8 2 HEX1 [7:0] $end
$var wire 8 3 HEX0 [7:0] $end
$scope module h0 $end
$var wire 5 4 num [4:0] $end
$var reg 8 5 out [7:0] $end
$upscope $end
$scope module h1 $end
$var wire 5 6 num [4:0] $end
$var reg 8 7 out [7:0] $end
$upscope $end
$scope module h4 $end
$var wire 5 8 num [4:0] $end
$var reg 8 9 out [7:0] $end
$upscope $end
$scope module h5 $end
$var wire 5 : num [4:0] $end
$var reg 8 ; out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10111111 ;
b10000 :
b10010010 9
b101 8
b10111111 7
b10000 6
b10010010 5
b101 4
b10010010 3
b10111111 2
b10010010 1
b10111111 0
bz010 /
b10000 .
b10000 -
b1011 ,
b1011 +
1*
b101 )
b101 (
b1110111011 '
b1110111011 &
b10010010 %
b10111111 $
b10010010 #
b10111111 "
bz010 !
$end
#100
