|top
KEY[0] => latch_out.CLK
KEY[1] => freq_sel.CLK
ADC_CLK_10 => ADC_CLK_10.IN1
LEDR[0] << <GND>
LEDR[1] << clk.DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] << codeconverter:h0.out
HEX0[1] << codeconverter:h0.out
HEX0[2] << codeconverter:h0.out
HEX0[3] << codeconverter:h0.out
HEX0[4] << codeconverter:h0.out
HEX0[5] << codeconverter:h0.out
HEX0[6] << codeconverter:h0.out
HEX0[7] << codeconverter:h0.out
HEX1[0] << codeconverter:h1.out
HEX1[1] << codeconverter:h1.out
HEX1[2] << codeconverter:h1.out
HEX1[3] << codeconverter:h1.out
HEX1[4] << codeconverter:h1.out
HEX1[5] << codeconverter:h1.out
HEX1[6] << codeconverter:h1.out
HEX1[7] << codeconverter:h1.out
HEX2[0] << codeconverter:h2.out
HEX2[1] << codeconverter:h2.out
HEX2[2] << codeconverter:h2.out
HEX2[3] << codeconverter:h2.out
HEX2[4] << codeconverter:h2.out
HEX2[5] << codeconverter:h2.out
HEX2[6] << codeconverter:h2.out
HEX2[7] << codeconverter:h2.out
HEX4[0] << codeconverter:h4.out
HEX4[1] << codeconverter:h4.out
HEX4[2] << codeconverter:h4.out
HEX4[3] << codeconverter:h4.out
HEX4[4] << codeconverter:h4.out
HEX4[5] << codeconverter:h4.out
HEX4[6] << codeconverter:h4.out
HEX4[7] << codeconverter:h4.out
HEX5[0] << codeconverter:h5.out
HEX5[1] << codeconverter:h5.out
HEX5[2] << codeconverter:h5.out
HEX5[3] << codeconverter:h5.out
HEX5[4] << codeconverter:h5.out
HEX5[5] << codeconverter:h5.out
HEX5[6] << codeconverter:h5.out
HEX5[7] << codeconverter:h5.out


|top|clock_divider:c
clk => slw_clk_2~reg0.CLK
clk => divider_2[0].CLK
clk => divider_2[1].CLK
clk => divider_2[2].CLK
clk => divider_2[3].CLK
clk => divider_2[4].CLK
clk => divider_2[5].CLK
clk => divider_2[6].CLK
clk => divider_2[7].CLK
clk => divider_2[8].CLK
clk => divider_2[9].CLK
clk => divider_2[10].CLK
clk => divider_2[11].CLK
clk => divider_2[12].CLK
clk => divider_2[13].CLK
clk => divider_2[14].CLK
clk => divider_2[15].CLK
clk => divider_2[16].CLK
clk => divider_2[17].CLK
clk => divider_2[18].CLK
clk => divider_2[19].CLK
clk => divider_2[20].CLK
clk => divider_2[21].CLK
clk => divider_2[22].CLK
clk => divider_2[23].CLK
clk => slw_clk_1~reg0.CLK
clk => divider_1[0].CLK
clk => divider_1[1].CLK
clk => divider_1[2].CLK
clk => divider_1[3].CLK
clk => divider_1[4].CLK
clk => divider_1[5].CLK
clk => divider_1[6].CLK
clk => divider_1[7].CLK
clk => divider_1[8].CLK
clk => divider_1[9].CLK
clk => divider_1[10].CLK
clk => divider_1[11].CLK
clk => divider_1[12].CLK
clk => divider_1[13].CLK
clk => divider_1[14].CLK
clk => divider_1[15].CLK
clk => divider_1[16].CLK
clk => divider_1[17].CLK
clk => divider_1[18].CLK
clk => divider_1[19].CLK
clk => divider_1[20].CLK
clk => divider_1[21].CLK
clk => divider_1[22].CLK
clk => divider_1[23].CLK
reset_n => divider_1[0].ACLR
reset_n => divider_1[1].ACLR
reset_n => divider_1[2].ACLR
reset_n => divider_1[3].ACLR
reset_n => divider_1[4].ACLR
reset_n => divider_1[5].ACLR
reset_n => divider_1[6].ACLR
reset_n => divider_1[7].ACLR
reset_n => divider_1[8].ACLR
reset_n => divider_1[9].ACLR
reset_n => divider_1[10].ACLR
reset_n => divider_1[11].ACLR
reset_n => divider_1[12].ACLR
reset_n => divider_1[13].ACLR
reset_n => divider_1[14].ACLR
reset_n => divider_1[15].ACLR
reset_n => divider_1[16].ACLR
reset_n => divider_1[17].ACLR
reset_n => divider_1[18].ACLR
reset_n => divider_1[19].ACLR
reset_n => divider_1[20].ACLR
reset_n => divider_1[21].ACLR
reset_n => divider_1[22].ACLR
reset_n => divider_1[23].ACLR
reset_n => divider_2[0].ACLR
reset_n => divider_2[1].ACLR
reset_n => divider_2[2].ACLR
reset_n => divider_2[3].ACLR
reset_n => divider_2[4].ACLR
reset_n => divider_2[5].ACLR
reset_n => divider_2[6].ACLR
reset_n => divider_2[7].ACLR
reset_n => divider_2[8].ACLR
reset_n => divider_2[9].ACLR
reset_n => divider_2[10].ACLR
reset_n => divider_2[11].ACLR
reset_n => divider_2[12].ACLR
reset_n => divider_2[13].ACLR
reset_n => divider_2[14].ACLR
reset_n => divider_2[15].ACLR
reset_n => divider_2[16].ACLR
reset_n => divider_2[17].ACLR
reset_n => divider_2[18].ACLR
reset_n => divider_2[19].ACLR
reset_n => divider_2[20].ACLR
reset_n => divider_2[21].ACLR
reset_n => divider_2[22].ACLR
reset_n => divider_2[23].ACLR
reset_n => slw_clk_2~reg0.ENA
reset_n => slw_clk_1~reg0.ENA
slw_clk_1 <= slw_clk_1~reg0.DB_MAX_OUTPUT_PORT_TYPE
slw_clk_2 <= slw_clk_2~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|counter:cnt
reset_n => ones[0]~reg0.PRESET
reset_n => ones[1]~reg0.ACLR
reset_n => ones[2]~reg0.ACLR
reset_n => ones[3]~reg0.ACLR
reset_n => tens[0]~reg0.ACLR
reset_n => tens[1]~reg0.ACLR
reset_n => tens[2]~reg0.ACLR
reset_n => tens[3]~reg0.ACLR
clk => tens[0]~reg0.CLK
clk => tens[1]~reg0.CLK
clk => tens[2]~reg0.CLK
clk => tens[3]~reg0.CLK
clk => ones[0]~reg0.CLK
clk => ones[1]~reg0.CLK
clk => ones[2]~reg0.CLK
clk => ones[3]~reg0.CLK
ones[0] <= ones[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ones[1] <= ones[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ones[2] <= ones[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ones[3] <= ones[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tens[0] <= tens[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tens[1] <= tens[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tens[2] <= tens[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tens[3] <= tens[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|codeconverter:h0
num[0] => Decoder0.IN4
num[1] => Decoder0.IN3
num[2] => Decoder0.IN2
num[3] => Decoder0.IN1
num[4] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= <VCC>


|top|codeconverter:h1
num[0] => Decoder0.IN4
num[1] => Decoder0.IN3
num[2] => Decoder0.IN2
num[3] => Decoder0.IN1
num[4] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= <VCC>


|top|codeconverter:h2
num[0] => Decoder0.IN4
num[1] => Decoder0.IN3
num[2] => Decoder0.IN2
num[3] => Decoder0.IN1
num[4] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= <VCC>


|top|codeconverter:h4
num[0] => Decoder0.IN4
num[1] => Decoder0.IN3
num[2] => Decoder0.IN2
num[3] => Decoder0.IN1
num[4] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= <VCC>


|top|codeconverter:h5
num[0] => Decoder0.IN4
num[1] => Decoder0.IN3
num[2] => Decoder0.IN2
num[3] => Decoder0.IN1
num[4] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= <VCC>


